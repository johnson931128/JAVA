# 1. 實機演示（單人模式與程式碼對應解說）

第一頁要說什麼：
- App.main 是整個遊戲的程式進入點，也就是說，當我們執行這個專案時，最先被呼叫的就是 App 這個類別裡的 main 方法。它負責初始化整個遊戲環境、載入設定，並啟動主選單畫面，讓玩家可以開始進行遊戲。所有後續的流程，都是從這裡開始展開的。
- LoginPanel 負責主選單畫面，這裡會顯示 SINGLE 和 MULTIPLE 按鈕，讓玩家選擇遊戲模式。所有主選單的按鈕事件和畫面切換邏輯都寫在 LoginPanel 裡。
- GameUI 則會初始化主畫面上的所有元件，像是分數、計時、迷宮面板、音效按鈕等。這些元件的生成、管理和事件處理都在 GameUI 裡設定，確保玩家有完整的操作介面。
- 玩家點選 SINGLE 後，畫面會切換到遊戲主畫面，這時會呼叫相關方法來初始化迷宮和玩家狀態。
- MazeGenerator 會產生一個新的隨機迷宮，並建立 Cell[][] 資料結構，這些資料會交給 MazePanel 負責繪製在畫面上。

第二頁要說什麼：
- GameState 會初始化並管理遊戲的所有狀態，包括玩家目前的位置、分數、時間、關卡等。這些資訊會即時顯示在畫面下方，讓玩家隨時掌握進度。
- Continue 類別負責遊戲的存檔功能，當玩家選擇存檔時，遊戲會把目前的關卡、玩家座標、迷宮種子等資訊寫入 save.txt，方便下次繼續遊玩。
- 玩家用鍵盤操作移動角色，這部分由 MazeGame.movePlayer 或 GameController.handleKeyPress 處理。每次移動都會呼叫 isValidMove 檢查是否能走，並即時更新畫面。
- 存檔功能讓玩家可以隨時保存進度，而 MENU 按鈕則可以讓玩家隨時返回主選單，重新選擇模式或結束遊戲。

第三頁要說什麼：
- 當玩家抵達終點時，MazeGame.checkWin 會自動判斷是否過關，並觸發過關流程。
- GameUI.showLevelCompleteDialog 會跳出過關對話框，顯示這一關的成績，並詢問玩家是否要繼續挑戰下一關。
- 玩家可以選擇繼續下一關，這時遊戲會自動產生新迷宮並重設狀態；也可以選擇返回主選單或結束遊戲。
- 如果選擇繼續，流程會重複初始化迷宮、狀態與畫面，否則遊戲結束。

# 2. 報告投影片解說

第一頁要說什麼：
- 這一頁主要簡介專案的主架構與功能，強調本遊戲具備迷宮自動生成、圖形化介面、按鈕事件處理、主畫面設計等特色，並說明這些功能如何讓遊戲更完整。

第二頁要說什麼：
- 這一頁要說明圖形生成、管理、事件觸發與資料結構的設計，對應 GameUI、MazeGame、Cell、Player、LoginPanel 等類別。可以強調這些類別如何分工合作，讓遊戲流程順暢，玩家操作直覺。

第三頁要說什麼：
- 這一頁介紹迷宮生成、狀態控制、資料儲存與遊戲啟動的流程，對應 GameState、MazePanel、Continue、App、MazeGenerator 等類別。補充每個類別的主要職責，以及它們在遊戲流程中的角色，讓聽眾了解整個專案的設計邏輯。
